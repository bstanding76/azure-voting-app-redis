stages:
  - stage: DeployRedis
    displayName: Deploy stage Redis
    dependsOn: BuildRedis
    jobs:
    - deployment: Deploy
      displayName: Deploy Job Redis
      environment: "${{ variables.environmentAKS }}"
      strategy:
        runOnce:
          deploy:
            steps:
            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                action: createSecret
                secretName: $(imagePullSecret)
                dockerRegistryEndpoint: ${{ variables.dockerRegistryServiceConnection }}

            - task: KubernetesManifest@0
              displayName: Deploy to Kubernetes cluster
              inputs:
                action: deploy
                manifests: |
                  $(Pipeline.Workspace)/manifests/deployment-redis.yml
                  $(Pipeline.Workspace)/manifests/service-redis.yml
                imagePullSecrets: |
                  ${{ variables.imagePullSecret }}
                containers: |
                  ${{ variables.dockerRegistryServiceConnection }}/${{ variables.imageRepositoryRedis }}:${{ variables.tag }}
  - stage: DeployVoteApp
    displayName: Deploy stage VoteApp
    dependsOn: BuildRedis
    jobs:
      - deployment: Deploy
        displayName: Deploy Job Redis
        environment: "${{ variables.environmentAKS }}"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: KubernetesManifest@0
                  displayName: Create imagePullSecret
                  inputs:
                    action: createSecret
                    secretName: $(imagePullSecret)
                    dockerRegistryEndpoint: ${{ variables.dockerRegistryServiceConnection }}

                - task: KubernetesManifest@0
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    action: deploy
                    manifests: |
                      $(Pipeline.Workspace)/manifests/deployment-voteapp.yaml
                      $(Pipeline.Workspace)/manifests/service-voteapp.yaml
                    imagePullSecrets: |
                      ${{ variables.imagePullSecret }}
                    containers: |
                      ${{ variables.dockerRegistryServiceConnection }}/${{ variables.imageRepositoryVotingApp }}:${{ variables.tag }}